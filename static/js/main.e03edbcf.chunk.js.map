{"version":3,"sources":["constants/constants.js","components/calculator/Calculator.js","components/FormulaScreen.js","components/OutputScreen.js","components/Button.js","components/calculator/Buttons.js","App.js","reportWebVitals.js","index.js"],"names":["isOperator","endsWithOperator","endsWithNegativeSign","clearStyle","background","operatorStyle","equalsStyle","position","height","bottom","Calculator","props","maxDigitWarning","setState","currentVal","prevVal","state","setTimeout","handleEvalute","includes","expression","formula","test","slice","replace","answer","Math","round","eval","toString","evaluated","handleOperators","e","value","target","initialize","currentSign","lastClicked","bind","handleNumbers","handleDecimal","this","length","match","className","currentValue","decimal","evaluate","numbers","operators","href","Component","FormulaScreen","OutputScreen","id","Button","symbol","onClick","style","Buttons","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e03edbcf.chunk.js","sourcesContent":["export const projectName = \"javascript-calculator\";\r\n\r\nexport const isOperator = /[x/+‑]/;\r\nexport const endsWithOperator = /[x+‑/]$/;\r\nexport const endsWithNegativeSign = /\\d[x/+‑]{1}‑$/;\r\nexport const clearStyle = { background: \"#FF2626\" };\r\nexport const operatorStyle = { background: \"#334756\" };\r\nexport const equalsStyle = {\r\n  background: \"#0A81AB\",\r\n  position: \"absolute\",\r\n  height: 130,\r\n  bottom: 5,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Buttons from \"./Buttons\";\r\nimport FormulaScreen from \"./../FormulaScreen.js\";\r\nimport OutputScreen from \"./../OutputScreen.js\";\r\nimport {\r\n  endsWithOperator,\r\n  endsWithNegativeSign,\r\n  isOperator,\r\n} from \"../../constants/constants\";\r\n\r\nexport default class Calculator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentVal: '0',\r\n      prevVal: '0',\r\n      formula: '',\r\n      currentSign: 'pos',\r\n      lastClicked: ''\r\n    };\r\n\r\n    this.maxDigitWarning = this.maxDigitWarning.bind(this);\r\n    this.handleEvalute = this.handleEvalute.bind(this);\r\n    this.handleOperators = this.handleOperators.bind(this);\r\n    this.handleNumbers = this.handleNumbers.bind(this);\r\n    this.handleDecimal = this.handleDecimal.bind(this);\r\n    this.initialize = this.initialize.bind(this);\r\n  }\r\n\r\n  maxDigitWarning = () => {\r\n    this.setState({\r\n      currentVal: \"Digit Limit Met\",\r\n      prevVal: this.state.currentVal,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        currentVal: this.state.prevVal,\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  handleEvalute = () => {\r\n    if (!this.state.currentVal.includes(\"Limit\")) {\r\n      let expression = this.state.formula;\r\n      while (endsWithOperator.test(expression)) {\r\n        expression = expression.slice(0, -1);\r\n      }\r\n      expression = expression\r\n        .replace(/x/g, \"*\")\r\n        .replace(/‑/g, \"-\")\r\n        .replace(\"--\", \"+0+0+0+0+0+0+\");\r\n      let answer = Math.round(1000000000000 * eval(expression)) / 1000000000000;\r\n      this.setState({\r\n        currentVal: answer.toString(),\r\n        formula:\r\n          expression\r\n            .replace(/\\*/g, \"⋅\")\r\n            .replace(/-/g, \"‑\")\r\n            .replace(\"+0+0+0+0+0+0+\", \"‑-\")\r\n            .replace(/(x|\\/|\\+)‑/, \"$1-\")\r\n            .replace(/^‑/, \"-\") +\r\n          \"=\" +\r\n          answer,\r\n        prevVal: answer,\r\n        evaluated: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleOperators = (e) => {\r\n    if (!this.state.currentVal.includes('Limit')) {\r\n      const value = e.target.value;\r\n      const { formula, prevVal, evaluated } = this.state;\r\n      this.setState({ currentVal: value, evaluated: false });\r\n      if (evaluated) {\r\n        this.setState({ formula: prevVal + value });\r\n      } else if (!endsWithOperator.test(formula)) {\r\n        this.setState({\r\n          prevVal: formula,\r\n          formula: formula + value\r\n        });\r\n      } else if (!endsWithNegativeSign.test(formula)) {\r\n        this.setState({\r\n          formula:\r\n            (endsWithNegativeSign.test(formula + value) ? formula : prevVal) +\r\n            value\r\n        });\r\n      } else if (value !== '‑') {\r\n        this.setState({\r\n          formula: prevVal + value\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleNumbers(e) {\r\n    if (!this.state.currentVal.includes('Limit')) {\r\n      const { currentVal, formula, evaluated } = this.state;\r\n      const value = e.target.value;\r\n      this.setState({ evaluated: false });\r\n      if (currentVal.length > 21) {\r\n        this.maxDigitWarning();\r\n      } else if (evaluated) {\r\n        this.setState({\r\n          currentVal: value,\r\n          formula: value !== '0' ? value : ''\r\n        });\r\n      } else {\r\n        this.setState({\r\n          currentVal:\r\n            currentVal === '0' || isOperator.test(currentVal)\r\n              ? value\r\n              : currentVal + value,\r\n          formula:\r\n            currentVal === '0' && value === '0'\r\n              ? formula === ''\r\n                ? value\r\n                : formula\r\n              : /([^.0-9]0|^0)$/.test(formula)\r\n              ? formula.slice(0, -1) + value\r\n              : formula + value\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleDecimal() {\r\n    if (this.state.evaluated === true) {\r\n      this.setState({\r\n        currentVal: '0.',\r\n        formula: '0.',\r\n        evaluated: false\r\n      });\r\n    } else if (\r\n      !this.state.currentVal.includes('.') &&\r\n      !this.state.currentVal.includes('Limit')\r\n    ) {\r\n      this.setState({ evaluated: false });\r\n      if (this.state.currentVal.length > 21) {\r\n        this.maxDigitWarning();\r\n      } else if (\r\n        endsWithOperator.test(this.state.formula) ||\r\n        (this.state.currentVal === '0' && this.state.formula === '')\r\n      ) {\r\n        this.setState({\r\n          currentVal: '0.',\r\n          formula: this.state.formula + '0.'\r\n        });\r\n      } else {\r\n        this.setState({\r\n          currentVal: this.state.formula.match(/(-?\\d+\\.?\\d*)$/)[0] + '.',\r\n          formula: this.state.formula + '.'\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  initialize = () => {\r\n    this.setState({\r\n      currentVal: \"0\",\r\n      prevVal: \"0\",\r\n      formula: \"\",\r\n      currentSign: \"pos\",\r\n      lastClicked: \"\",\r\n      evaluated: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"calculator\">\r\n          <FormulaScreen formula={this.state.formula.replace(/x/g, '⋅')} />\r\n          <OutputScreen currentValue={this.state.currentVal} />\r\n          <Buttons\r\n            decimal={this.handleDecimal}\r\n            evaluate={this.handleEvalute}\r\n            initialize={this.initialize}\r\n            numbers={this.handleNumbers}\r\n            operators={this.handleOperators}\r\n          />\r\n        </div>\r\n        <div className=\"author\">\r\n          {' '}\r\n          Designed and Coded By <br />\r\n          <a href=\"https://github.com/mg143pavankumar\" target=\"_blank\">\r\n            Mistry Pavan Kumar\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class FormulaScreen extends Component {\r\n  render() {\r\n    return <div className=\"formulaScreen\">{this.props.formula}</div>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class OutputScreen extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"outputScreen\" id=\"display\">\r\n        {this.props.currentValue}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nconst Button = ({ symbol, id, onClick, className, style }) => {\r\n  return (\r\n    <div>\r\n      <button\r\n        className={className ? `${className}` : null}\r\n        onClick={onClick}\r\n        id={id}\r\n        value={symbol}\r\n        style={style ? style : null}\r\n      >\r\n        {symbol}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  clearStyle,\r\n  equalsStyle,\r\n  operatorStyle,\r\n} from \"../../constants/constants\";\r\nimport Button from \"../Button\";\r\n\r\nexport default class Buttons extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"allButtons\">\r\n        <Button\r\n          symbol=\"AC\"\r\n          className=\"jumbo\"\r\n          id=\"clear\"\r\n          onClick={this.props.initialize}\r\n          style={clearStyle}\r\n        />\r\n        <Button\r\n          symbol=\"/\"\r\n          id=\"divide\"\r\n          onClick={this.props.operators}\r\n          style={operatorStyle}\r\n        />\r\n        <Button\r\n          symbol=\"x\"\r\n          id=\"multipy\"\r\n          onClick={this.props.operators}\r\n          style={operatorStyle}\r\n        />\r\n        <Button symbol=\"7\" id=\"seven\" onClick={this.props.numbers} />\r\n        <Button symbol=\"8\" id=\"eight\" onClick={this.props.numbers} />\r\n        <Button symbol=\"9\" id=\"nine\" onClick={this.props.numbers} />\r\n        <Button\r\n          symbol=\"-\"\r\n          id=\"subtract\"\r\n          onClick={this.props.operators}\r\n          style={operatorStyle}\r\n        />\r\n        <Button symbol=\"4\" id=\"four\" onClick={this.props.numbers} />\r\n        <Button symbol=\"5\" id=\"five\" onClick={this.props.numbers} />\r\n        <Button symbol=\"6\" id=\"six\" onClick={this.props.numbers} />\r\n\r\n        <Button\r\n          symbol=\"+\"\r\n          id=\"add\"\r\n          onClick={this.props.operators}\r\n          style={operatorStyle}\r\n        />\r\n        <Button symbol=\"1\" id=\"one\" onClick={this.props.numbers} />\r\n        <Button symbol=\"2\" id=\"two\" onClick={this.props.numbers} />\r\n        <Button symbol=\"3\" id=\"three\" onClick={this.props.numbers} />\r\n        <Button\r\n          symbol=\"0\"\r\n          id=\"zero\"\r\n          className=\"jumbo\"\r\n          onClick={this.props.numbers}\r\n        />\r\n        <Button symbol=\".\" id=\"decimal\" onClick={this.props.decimal} />\r\n        <Button\r\n          symbol=\"=\"\r\n          id=\"eqauls\"\r\n          onClick={this.props.evaluate}\r\n          style={equalsStyle}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport Calculator from \"./components/calculator/Calculator\";\n\nfunction App() {\n  return (\n    <div>\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}